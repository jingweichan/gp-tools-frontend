{"version":3,"sources":["containers/PopSignaturePage/index.tsx","containers/HmacCalculatorPage/index.tsx","App.tsx","serviceWorker.js","index.js"],"names":["base64UrlEncode","value","toString","replace","PopSignaturePage","_useQueryParams","useQueryParams","accessToken","StringParam","date","clientSecret","_useQueryParams2","Object","_Users_kwonghow_grab_gp_tools_frontend_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","params","setParams","_useState","useState","_useState2","result","setResult","_useState3","_useState4","errors","setErrors","useEffect","Date","toUTCString","validate","useCallback","newErrors","key","label","forEach","_ref","push","concat","computeResults","length","dateUTC","timestamp","Math","round","getTime","message","signature","CryptoJS","enc","Base64","stringify","HmacSHA256","payload","time_since_epoch","sig","payloadBytes","JSON","Buffer","from","generatePopSignature","handleChange","e","newParams","_Users_kwonghow_grab_gp_tools_frontend_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_kwonghow_grab_gp_tools_frontend_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","name","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","className","htmlFor","id","onChange","required","type","onClick","preventDefault","map","error","HmacCalculatorPage","contentType","headerDate","method","partnerSecret","requestBody","requestUrl","slicedToArray","hashedPayload","hmacDigest","requestData","headerContentType","SHA256","join","generateHmacSignature","objectSpread","defineProperty","react_default","placeholder","rows","toConsumableArray","App","react_router_dom","basename","esm","ReactRouterRoute","Route","to","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0KAIMA,EAAkB,SAACC,GAAD,OACtBA,EACGC,WACAC,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,MAsLLC,IA5JU,WAAM,IAAAC,EACDC,YAAe,CACzCC,YAAaC,IACbC,KAAMD,IACNE,aAAcF,MAJaG,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACtBS,EADsBH,EAAA,GACdI,EADcJ,EAAA,GAAAK,EAODC,mBAAiB,IAPhBC,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAOtBG,EAPsBD,EAAA,GAOdE,EAPcF,EAAA,GAAAG,EAQDJ,mBAAmB,IARlBK,EAAAV,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAQtBE,EARsBD,EAAA,GAQdE,EARcF,EAAA,GAU7BG,oBAAU,WACRV,EAAU,CACRR,YAAaO,EAAOP,aAAe,GACnCG,aAAcI,EAAOJ,cAAgB,GACrCD,KAAMK,EAAOL,OAAQ,IAAIiB,MAAOC,iBAGjC,IAEH,IAAMC,EAAWC,sBAAY,WAC3B,IAQMC,EAAsB,GAQ5B,MAbK,CACH,CAAEC,IAAK,eAAgBC,MAAO,UAC9B,CAAED,IAAK,cAAeC,MAAO,iBAKzBC,QAAQ,SAAAC,GAAoB,IAAjBH,EAAiBG,EAAjBH,IAAKC,EAAYE,EAAZF,MACflB,EAAOiB,IACVD,EAAUK,KAAV,gBAAAC,OAA+BJ,EAA/B,QAIGF,GACN,CAAChB,IAEEuB,EAAiBR,sBAAY,WACjC,IAAMC,EAAYF,IAEdL,EAAOe,QACTd,EAAUM,GAGRA,EAAUQ,QAIdlB,EA1EyB,SAC3Bb,EACAgC,EACA7B,GAEA,IAAMD,EAAO,IAAIiB,KAAKa,GAEhBC,EAAYC,KAAKC,MAAMjC,EAAKkC,UAAY,KACxCC,EAAO,GAAAR,OAAMI,EAAUtC,YAAhBkC,OAA6B7B,GAEpCsC,EAAYC,IAASC,IAAIC,OAAOC,UACpCH,IAASI,WAAWN,EAASlC,IAGzByC,EAAU,CACdC,iBAAkBZ,EAClBa,IAAKrD,EAAgB6C,IAGjBS,EAAeC,KAAKN,UAAUE,GAEpC,OAAOnD,EAAgBwD,EAAOC,KAAKH,GAAcpD,SAAS,WAsDtDwD,CACE5C,EAAOP,YACPO,EAAOL,KACPK,EAAOJ,gBAGV,CAACa,EAAQT,EAAQc,IAEpBH,oBAAU,WACRY,KACC,CAACA,EAAgBvB,IAEpB,IAAM6C,EAAe,SAACC,GACpB,IAAMC,EAASjD,OAAAkD,EAAA,EAAAlD,CAAA,GAAQE,EAARF,OAAAmD,EAAA,EAAAnD,CAAA,GAAiBgD,EAAEI,OAAOC,KAAOL,EAAEI,OAAO/D,QACzDc,EAAU8C,EAAW,SAgBvB,OACEK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,0BAA0BC,QAAQ,iBAAnD,UAGAL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,eACVE,GAAG,gBACHP,KAAK,eACLQ,SAAUd,EACVe,UAAQ,EACRC,KAAK,OACL1E,MAAOa,EAAOJ,iBAIpBwD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,0BAA0BC,QAAQ,QAAnD,eAGAL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,eACVE,GAAG,OACHP,KAAK,OACLQ,SAAUd,EACVgB,KAAK,OACL1E,MAAOa,EAAOL,SAIpByD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,0BAA0BC,QAAQ,gBAAnD,gBAGAL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,eACVE,GAAG,eACHP,KAAK,cACLQ,SAAUd,EACVgB,KAAK,OACL1E,MAAOa,EAAOP,gBAIpB2D,EAAAC,EAAAC,cAAA,UACEE,UAAU,kBACVE,GAAG,aACHI,QAlEa,SAAChB,GACpBA,EAAEiB,iBAEF,IAAM/C,EAAYF,IAEdE,EACFN,EAAUM,GAIZO,KAyDMsC,KAAK,UAJP,kBAQCpD,EAAOuD,IAAI,SAAAC,GAAK,OACfb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQvC,IAAKgD,GACzBA,KAGLb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACcjD,GAAU+C,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAUnD,uPCkE7C6D,EAjNY,WAAM,IAAA3E,EACHC,YAAe,CACzC2E,YAAazE,IACb0E,WAAY1E,IACZ2E,OAAQ3E,IACR4E,cAAe5E,IACf6E,YAAa7E,IACb8E,WAAY9E,MAPiBG,EAAAC,OAAA2E,EAAA,EAAA3E,CAAAP,EAAA,GACxBS,EADwBH,EAAA,GAChBI,EADgBJ,EAAA,GAAAK,EAUHC,mBAAiB,CAC3CuE,cAAe,GACfC,WAAY,GACZC,YAAa,KAbgBxE,EAAAN,OAAA2E,EAAA,EAAA3E,CAAAI,EAAA,GAUxBG,EAVwBD,EAAA,GAUhBE,EAVgBF,EAAA,GAAAG,EAgBHJ,mBAAmB,IAhBhBK,EAAAV,OAAA2E,EAAA,EAAA3E,CAAAS,EAAA,GAgBxBE,EAhBwBD,EAAA,GAgBhBE,EAhBgBF,EAAA,GAkB/BG,oBAAU,WACRV,EAAU,CACRkE,YAAanE,EAAOmE,aAAe,mBACnCC,WAAYpE,EAAOoE,aAAc,IAAIxD,MAAOC,cAC5CwD,OAAQrE,EAAOqE,QAAU,OACzBC,cAAetE,EAAOsE,eAAiB,GACvCC,YAAavE,EAAOuE,aAAP,sCACbC,WAAYxE,EAAOwE,YAAc,oBAGlC,IAEH,IAAMjD,EAAiBR,sBAAY,WAC5Bf,EAAOsE,gBAIZ5D,EAAU,IACVJ,EAxE0B,SAC5B+D,EACAQ,EACAT,EACAI,EACAD,EACAD,GAEe,QAAXD,GAAqBE,IACvBA,EAAc,IAGhB,IAAMG,EAAgBH,EAClBvC,IAASC,IAAIC,OAAOC,UAAUH,IAAS8C,OAAOP,IAC9C,GAEEK,EAAc,CAClB,CAACP,EAAQQ,EAAmBT,EAAYI,EAAYE,GAAeK,KACjE,MAEF,MACAA,KAAK,IAMP,MAAO,CAAEL,gBAAeE,cAAaD,WAJlB3C,IAASC,IAAIC,OAAOC,UACrCH,IAASI,WAAWwC,EAAaN,KAiD/BU,CACEhF,EAAOqE,OACPrE,EAAOmE,YACPnE,EAAOoE,WACPpE,EAAOwE,WACPxE,EAAOuE,YACPvE,EAAOsE,kBAGV,CAACtE,IAEJW,oBAAU,WACRY,KACC,CAACA,EAAgBvB,IAEpB,IAAM6C,EAAe,SACnBC,GAEA,IAAMC,EAASjD,OAAAmF,EAAA,EAAAnF,CAAA,GAAQE,EAARF,OAAAoF,EAAA,EAAApF,CAAA,GAAiBgD,EAAEI,OAAOC,KAAOL,EAAEI,OAAO/D,QACzDc,EAAU8C,EAAW,SAcvB,OACEoC,EAAA9B,EAAAC,cAAA6B,EAAA9B,EAAAE,SAAA,KACE4B,EAAA9B,EAAAC,cAAA,6BACA6B,EAAA9B,EAAAC,cAAA,YACE6B,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,kBACb2B,EAAA9B,EAAAC,cAAA,SAAOE,UAAU,0BAA0BC,QAAQ,kBAAnD,UAGA0B,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,YACb2B,EAAA9B,EAAAC,cAAA,SACEE,UAAU,eACVE,GAAG,iBACHP,KAAK,gBACLQ,SAAUd,EACVe,UAAQ,EACRC,KAAK,OACL1E,MAAOa,EAAOsE,kBAIpBa,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,kBACb2B,EAAA9B,EAAAC,cAAA,SAAOE,UAAU,0BAA0BC,QAAQ,UAAnD,UAGA0B,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,YACb2B,EAAA9B,EAAAC,cAAA,UACEE,UAAU,gBACVE,GAAG,SACHP,KAAK,SACLQ,SAAUd,EACV1D,MAAOa,EAAOqE,QAEdc,EAAA9B,EAAAC,cAAA,UAAQnE,MAAM,QAAd,QACAgG,EAAA9B,EAAAC,cAAA,UAAQnE,MAAM,OAAd,UAINgG,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,kBACb2B,EAAA9B,EAAAC,cAAA,SAAOE,UAAU,0BAA0BC,QAAQ,gBAAnD,uBAGA0B,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,YACb2B,EAAA9B,EAAAC,cAAA,SACEE,UAAU,eACVE,GAAG,eACHP,KAAK,cACLQ,SAAUd,EACVgB,KAAK,OACL1E,MAAOa,EAAOmE,gBAIpBgB,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,kBACb2B,EAAA9B,EAAAC,cAAA,SAAOE,UAAU,0BAA0BC,QAAQ,eAAnD,eAGA0B,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,YACb2B,EAAA9B,EAAAC,cAAA,SACEE,UAAU,eACVE,GAAG,cACHP,KAAK,aACLQ,SAAUd,EACVgB,KAAK,OACL1E,MAAOa,EAAOoE,eAIpBe,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,kBACb2B,EAAA9B,EAAAC,cAAA,SAAOE,UAAU,0BAA0BC,QAAQ,eAAnD,eAGA0B,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,YACb2B,EAAA9B,EAAAC,cAAA,SACEE,UAAU,eACVE,GAAG,cACHP,KAAK,aACLQ,SAAUd,EACVgB,KAAK,OACLuB,YAAY,iBACZjG,MAAOa,EAAOwE,eAIpBW,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,kBACb2B,EAAA9B,EAAAC,cAAA,SAAOE,UAAU,0BAA0BC,QAAQ,gBAAnD,eAEE0B,EAAA9B,EAAAC,cAAA,WAFF,sBAKA6B,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,YACb2B,EAAA9B,EAAAC,cAAA,YACEE,UAAU,yBACVE,GAAG,eACHP,KAAK,cACLQ,SAAUd,EACVwC,KAAM,EACNlG,MAAOa,EAAOuE,gBAIpBY,EAAA9B,EAAAC,cAAA,UACEE,UAAU,kBACVE,GAAG,aACHI,QAlHa,SAAChB,GACpBA,EAAEiB,iBAEG/D,EAAOsE,cAKZ/C,IAJEb,EAAS,GAAAY,OAAAxB,OAAAwF,EAAA,EAAAxF,CAAKW,GAAL,CAAa,2BA+GlBoD,KAAK,UAJP,kBAQCpD,EAAOuD,IAAI,SAAAC,GAAK,OACfkB,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,SAASS,KAE1BkB,EAAA9B,EAAAC,cAAA,WACA6B,EAAA9B,EAAAC,cAAA,oBACA6B,EAAA9B,EAAAC,cAAA,WACE6B,EAAA9B,EAAAC,cAAA,oBACQ,IACLjD,EAAOsE,YACNQ,EAAA9B,EAAAC,cAAA,QAAME,UAAU,UAAUnD,EAAOsE,aAGrCQ,EAAA9B,EAAAC,cAAA,WACA6B,EAAA9B,EAAAC,cAAA,WACA6B,EAAA9B,EAAAC,cAAA,8BACkB,IACG,QAAlBtD,EAAOqE,OAAmB,MAAQhE,EAAOqE,eAE5CS,EAAA9B,EAAAC,cAAA,WACA6B,EAAA9B,EAAAC,cAAA,WACA6B,EAAA9B,EAAAC,cAAA,4BAEE6B,EAAA9B,EAAAC,cAAA,WACCjD,EAAOuE,yBCpNLW,EAhBH,WACV,OACEJ,EAAA9B,EAAAC,cAACkC,EAAA,EAAD,CAAQC,SAAS,sBACfN,EAAA9B,EAAAC,cAACoC,EAAA,EAAD,CAAoBC,iBAAkBC,KACpCT,EAAA9B,EAAAC,cAACkC,EAAA,EAAD,CAAMK,GAAG,SAAT,mBADF,KAC4C,IAC1CV,EAAA9B,EAAAC,cAACkC,EAAA,EAAD,CAAMK,GAAG,kBAAT,4BACAV,EAAA9B,EAAAC,cAACwC,EAAA,EAAD,KACEX,EAAA9B,EAAAC,cAACwC,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAW9B,IAC/BiB,EAAA9B,EAAAC,cAACwC,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAW1G,MACxC6F,EAAA9B,EAAAC,cAACwC,EAAA,EAAD,CAAUD,GAAG,cCVHI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpB,EAAA9B,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ebf677a4.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport CryptoJS from 'crypto-js';\nimport { useQueryParams, StringParam } from 'use-query-params';\n\nconst base64UrlEncode = (value: string) =>\n  value\n    .toString()\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n\nconst generatePopSignature = (\n  accessToken: string,\n  dateUTC: string,\n  clientSecret: string,\n) => {\n  const date = new Date(dateUTC);\n\n  const timestamp = Math.round(date.getTime() / 1000);\n  const message = `${timestamp.toString()}${accessToken}`;\n\n  const signature = CryptoJS.enc.Base64.stringify(\n    CryptoJS.HmacSHA256(message, clientSecret),\n  );\n\n  const payload = {\n    time_since_epoch: timestamp,\n    sig: base64UrlEncode(signature),\n  };\n\n  const payloadBytes = JSON.stringify(payload);\n\n  return base64UrlEncode(Buffer.from(payloadBytes).toString('base64'));\n};\n\nconst PopSignaturePage = () => {\n  const [params, setParams] = useQueryParams({\n    accessToken: StringParam,\n    date: StringParam,\n    clientSecret: StringParam,\n  });\n\n  const [result, setResult] = useState<string>('');\n  const [errors, setErrors] = useState<string[]>([]);\n\n  useEffect(() => {\n    setParams({\n      accessToken: params.accessToken || '',\n      clientSecret: params.clientSecret || '',\n      date: params.date || new Date().toUTCString(),\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const validate = useCallback(() => {\n    const rules: Array<{\n      key: 'accessToken' | 'clientSecret';\n      label: string;\n    }> = [\n      { key: 'clientSecret', label: 'Secret' },\n      { key: 'accessToken', label: 'Access Token' },\n    ];\n\n    const newErrors: string[] = [];\n\n    rules.forEach(({ key, label }) => {\n      if (!params[key]) {\n        newErrors.push(`Please enter ${label}.`);\n      }\n    });\n\n    return newErrors;\n  }, [params]);\n\n  const computeResults = useCallback(() => {\n    const newErrors = validate();\n\n    if (errors.length) {\n      setErrors(newErrors);\n    }\n\n    if (newErrors.length) {\n      return;\n    }\n\n    setResult(\n      generatePopSignature(\n        params.accessToken as string,\n        params.date as string,\n        params.clientSecret as string,\n      ),\n    );\n  }, [errors, params, validate]);\n\n  useEffect(() => {\n    computeResults();\n  }, [computeResults, params]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newParams = { ...params, [e.target.name]: e.target.value };\n    setParams(newParams, 'push');\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const newErrors = validate();\n\n    if (newErrors) {\n      setErrors(newErrors);\n      return;\n    }\n\n    computeResults();\n  };\n\n  return (\n    <>\n      <h1>POP Signature Calculator</h1>\n      <form>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"client-secret\">\n            Secret\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"client-secret\"\n              name=\"clientSecret\"\n              onChange={handleChange}\n              required\n              type=\"text\"\n              value={params.clientSecret}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"date\">\n            Header Date\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"date\"\n              name=\"date\"\n              onChange={handleChange}\n              type=\"text\"\n              value={params.date}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"access-token\">\n            Access Token\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"access-token\"\n              name=\"accessToken\"\n              onChange={handleChange}\n              type=\"text\"\n              value={params.accessToken}\n            />\n          </div>\n        </div>\n        <button\n          className=\"btn btn-primary\"\n          id=\"submit-btn\"\n          onClick={handleSubmit}\n          type=\"button\"\n        >\n          Calculate HMAC\n        </button>\n        {errors.map(error => (\n          <div className=\"error\" key={error}>\n            {error}\n          </div>\n        ))}\n        <hr />\n        <h3>Result</h3>\n        <pre>\n          <code>\n            Signature: {result && <span className=\"result\">{result}</span>}\n          </code>\n        </pre>\n      </form>\n    </>\n  );\n};\n\nexport default PopSignaturePage;\n","import CryptoJS from 'crypto-js';\nimport React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport { StringParam, useQueryParams } from 'use-query-params';\n\nconst generateHmacSignature = (\n  method: string,\n  headerContentType: string,\n  headerDate: string,\n  requestUrl: string,\n  requestBody: string,\n  partnerSecret: string,\n) => {\n  if (method === 'GET' || !requestBody) {\n    requestBody = '';\n  }\n\n  const hashedPayload = requestBody\n    ? CryptoJS.enc.Base64.stringify(CryptoJS.SHA256(requestBody))\n    : '';\n\n  const requestData = [\n    [method, headerContentType, headerDate, requestUrl, hashedPayload].join(\n      '\\n',\n    ),\n    '\\n',\n  ].join('');\n\n  const hmacDigest = CryptoJS.enc.Base64.stringify(\n    CryptoJS.HmacSHA256(requestData, partnerSecret),\n  );\n\n  return { hashedPayload, requestData, hmacDigest };\n};\n\ninterface Result {\n  hashedPayload: string;\n  hmacDigest: string;\n  requestData: string;\n}\n\nconst HmacCalculatorPage = () => {\n  const [params, setParams] = useQueryParams({\n    contentType: StringParam,\n    headerDate: StringParam,\n    method: StringParam,\n    partnerSecret: StringParam,\n    requestBody: StringParam,\n    requestUrl: StringParam,\n  });\n\n  const [result, setResult] = useState<Result>({\n    hashedPayload: '',\n    hmacDigest: '',\n    requestData: '',\n  });\n\n  const [errors, setErrors] = useState<string[]>([]);\n\n  useEffect(() => {\n    setParams({\n      contentType: params.contentType || 'application/json',\n      headerDate: params.headerDate || new Date().toUTCString(),\n      method: params.method || 'POST',\n      partnerSecret: params.partnerSecret || '',\n      requestBody: params.requestBody || `{\"foo\":\"bar\",\"baz\":\"lol\",\"kek\":168}`,\n      requestUrl: params.requestUrl || '/relative-path',\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const computeResults = useCallback(() => {\n    if (!params.partnerSecret) {\n      return;\n    }\n\n    setErrors([]);\n    setResult(\n      generateHmacSignature(\n        params.method as string,\n        params.contentType as string,\n        params.headerDate as string,\n        params.requestUrl as string,\n        params.requestBody as string,\n        params.partnerSecret as string,\n      ),\n    );\n  }, [params]);\n\n  useEffect(() => {\n    computeResults();\n  }, [computeResults, params]);\n\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>,\n  ) => {\n    const newParams = { ...params, [e.target.name]: e.target.value };\n    setParams(newParams, 'push');\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!params.partnerSecret) {\n      setErrors([...errors, 'Please enter secret.']);\n      return;\n    }\n\n    computeResults();\n  };\n\n  return (\n    <>\n      <h1>HMAC Calculator</h1>\n      <form>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"partner-secret\">\n            Secret\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"partner-secret\"\n              name=\"partnerSecret\"\n              onChange={handleChange}\n              required\n              type=\"text\"\n              value={params.partnerSecret}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"method\">\n            Method\n          </label>\n          <div className=\"col-sm-8\">\n            <select\n              className=\"custom-select\"\n              id=\"method\"\n              name=\"method\"\n              onChange={handleChange}\n              value={params.method}\n            >\n              <option value=\"POST\">POST</option>\n              <option value=\"GET\">GET</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"content-type\">\n            Header Content Type\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"content-type\"\n              name=\"contentType\"\n              onChange={handleChange}\n              type=\"text\"\n              value={params.contentType}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"header-date\">\n            Header Date\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"header-date\"\n              name=\"headerDate\"\n              onChange={handleChange}\n              type=\"text\"\n              value={params.headerDate}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"request-url\">\n            Request URL\n          </label>\n          <div className=\"col-sm-8\">\n            <input\n              className=\"form-control\"\n              id=\"request-url\"\n              name=\"requestUrl\"\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"/relative-path\"\n              value={params.requestUrl}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-form-label col-sm-4\" htmlFor=\"request-body\">\n            Request Body\n            <br />\n            (JSON stringified)\n          </label>\n          <div className=\"col-sm-8\">\n            <textarea\n              className=\"form-control monospace\"\n              id=\"request-body\"\n              name=\"requestBody\"\n              onChange={handleChange}\n              rows={3}\n              value={params.requestBody}\n            />\n          </div>\n        </div>\n        <button\n          className=\"btn btn-primary\"\n          id=\"submit-btn\"\n          onClick={handleSubmit}\n          type=\"button\"\n        >\n          Calculate HMAC\n        </button>\n        {errors.map(error => (\n          <div className=\"error\">{error}</div>\n        ))}\n        <hr />\n        <h3>Result</h3>\n        <pre>\n          <code>\n            HMAC:{' '}\n            {result.hmacDigest && (\n              <span className=\"result\">{result.hmacDigest}</span>\n            )}\n          </code>\n          <br />\n          <br />\n          <code>\n            Hashed payload:{' '}\n            {params.method === 'GET' ? 'N/A' : result.hashedPayload}\n          </code>\n          <br />\n          <br />\n          <code>\n            Request data:\n            <br />\n            {result.requestData}\n          </code>\n        </pre>\n      </form>\n    </>\n  );\n};\n\nexport default HmacCalculatorPage;\n","import React from 'react';\nimport {\n  Link,\n  Redirect,\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\n\nimport HmacCalculatorPage from './containers/HmacCalculatorPage';\nimport PopSignaturePage from './containers/PopSignaturePage';\n\nconst App = () => {\n  return (\n    <Router basename=\"/gp-tools-frontend\">\n      <QueryParamProvider ReactRouterRoute={Route}>\n        <Link to=\"/hmac\">HMAC Calculator</Link> |{' '}\n        <Link to=\"/pop-signature\">POP Signature Calculator</Link>\n        <Switch>\n          <Route path=\"/hmac\" component={HmacCalculatorPage} />\n          <Route path=\"/pop-signature\" component={PopSignaturePage} />\n          <Redirect to=\"/hmac\" />\n        </Switch>\n      </QueryParamProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}